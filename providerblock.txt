Jenkinsfile

pipeline {
    agent any
    
    tools {
        maven 'Maven'
        nodejs 'Node'
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Get code from your repository
                git url: 'https://github.com/yourusername/webapp-project.git', branch: 'main'
            }
        }
        
        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        
        stage('Test Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm test'
                }
            }
        }
        
        stage('Build Backend') {
            steps {
                dir('backend') {
                    sh 'mvn clean package'
                }
            }
        }
        
        stage('Test Backend') {
            steps {
                dir('backend') {
                    sh 'mvn test'
                }
            }
        }
        
        stage('Code Quality Analysis') {
            steps {
                dir('backend') {
                    sh 'mvn sonar:sonar'
                }
                dir('frontend') {
                    sh 'npm run lint'
                }
            }
        }
        
        stage('Package Applications') {
            steps {
                // Archive frontend build
                dir('frontend/build') {
                    sh 'tar -czf ../frontend-build.tar.gz .'
                }
                
                // Backend is already packaged as a JAR by Maven
            }
        }
        
        stage('Deploy to Test Environment') {
            steps {
                // This would typically deploy to a test environment
                echo 'Deploying to test environment'
                // Run integration tests if needed
            }
        }
        
        stage('Deploy to Production') {
            when {
                branch 'main'
            }
            steps {
                // Deploy Frontend
                sshagent(['frontend-server-key']) {
                    sh '''
                        scp frontend/frontend-build.tar.gz ec2-user@${FRONTEND_IP}:~/
                        ssh ec2-user@${FRONTEND_IP} './deploy_frontend.sh frontend-build.tar.gz'
                    '''
                }
                
                // Deploy Backend
                sshagent(['backend-server-key']) {
                    sh '''
                        scp backend/target/webapp-backend.jar ec2-user@${BACKEND_IP}:~/
                        ssh ec2-user@${BACKEND_IP} './deploy_backend.sh webapp-backend.jar'
                    '''
                }
            }
        }
    }
    
    post {
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
